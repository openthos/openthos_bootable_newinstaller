#
# By 
#  Chih-Wei Huang   <cwhuang@linux.org.tw>
#  Yu Chen          <yuchen@tsinghua.edu.cn>
# Last updated 2016/08/06
#
# License: GNU Public License
# We explicitely grant the right to use the scripts
# with Android-x86 project.
#
CMD=""
tempfile=/tmp/temp-$$
menufile=/tmp/menu-$$
log=/tmp/install-log
EfiMountPoint=/hd/efi
DataMountPoint=/hd/data
DataImgMountPoint=/hd/dataimg
CPIO=cpio
SRC="livemedia/OpenThos"
files="kernel install.img initrd.img ramdisk.img system.*"
asrc="OpenThos"
bootconf=$EfiMountPoint/OpenThos/boto_linux.conf
source /scripts/install

create_boto_img()
{
	if [ $avaiable -gt 10 ];then
		default_size=10
	else
		default_size=$avaiable
	fi
	bname=`basename $2`
	if [ -e $2 ]; then
		dialog --title " Confirm "  --yesno \
			"\n $bname exists. Overwrite it?" 7 38
		[ $? -ne 0 ] && return 255
		rm -f $2
	fi
	dialog --title " Question " --nook --nocancel --inputbox \
		"\nPlease input the size of the $bname in GB (max "$avaiable"):" 8 63 $default_size 2> $tempfile
	size=`cat $tempfile`
	[ 0$size -le 0 -o 0$size -gt "$avaiable" ] && size=$avaiable
	size=`expr $size \* 1024`
	dd if=/dev/zero of=$2 bs=1 count=0 seek=$size"M"
}

avaiable_space()
{
	avaiable=`df -h|grep $DataMountPoint|awk '{print $4;}'|awk -F "G" '{print $1}'|awk -F "." '{print $1}'`
	if [ "$avaiable" -gt 10 ];then
		return $avaiable
	else
		dialog --title " Confirm " --yesno \
			"\nThe hard drive least space is less than 10G,do you still install it?" 11 62
		if [ $? = 0 ];then
			return $avaiable
		else
			rebooting
		fi
	fi
}
create_boto_data_img()
{
	avaiable_space
	dialog --title " Confirm " --yesno \
		"\nThe installer is going to create a disk image to save the user data.\ndefault space is 10G.\n\nAre you sure to create the image?" 11 62
	if [ $? -eq 0 ]; then
		create_boto_img $avaiable $DataMountPoint/openthos/data.img
		losetup /dev/loop6 $DataMountPoint/openthos/data.img
		make_ext4fs -L /data /dev/loop6 > /dev/tty6
		[ $? -ne 0 ] && dialog --msgbox "\n Failed to create data.img." 7 33
	else
		dialog --title " Warning " --msgbox \
			"\nOK. So data will be save to a RAMDISK(tmpfs), and lose after power off." 8 49
	fi
}

boto_install_to()
{
	echo boto_install_to ...

	cd /
	local disk=`echo $1|sed 's/[0-9]*$//g'`
	local device=$1
	while [ 1 ]; do
		if [ -n "`blkid $device|grep vfat`" ];
		then
			dialog --title " Confirm "  --defaultno --yesno \
				"\n Detect $1 filesystem is FAT32,Reformat it?" 10 60
			if [ $? -eq 0 ];then
				format_fs $device efi
			fi
		else
			format_fs $device efi
		fi
		try_mount rw $device $EfiMountPoint && break
		dialog --clear --title " Error "  --yesno \
			"\n Cannot mount /dev/$1\n Do you want to format it?" 8 37
		[ $? -ne 0 ] && return 255
	done

	size=0
	for s in `cd /mnt/$SRC/;du -sk $files | awk '{print $1}'`; do
		size=$(($size+$s))
	done
	
	mkdir -p $EfiMountPoint/$asrc
	cd $EfiMountPoint/$asrc
	rm -rf system*
	( ( cd /mnt/$SRC/; find $files | $CPIO -H newc -o ) | pv -ns ${size}k | ( $CPIO -iu > /dev/null; echo $? > /tmp/result )) 2>&1 \
		| progress_bar "Installing OPENTHOS" "Expect to write $size KB..."
	result=$((`cat /tmp/result`*255))
	#extract refind install zip
	cd $EfiMountPoint/$asrc
	tar -xvf /mnt/$SRC/efi.tar.bz2 -C $EfiMountPoint > /dev/null
	mv $EfiMountPoint/efi/boot $EfiMountPoint/efi/boto
	if [ ! -e $EfiMountPoint/efi/boot/bootx64.efi ];then
		mkdir $EfiMountPoint/efi/boot -p
		mv $EfiMountPoint/efi/boto/fallback_x64.efi $EfiMountPoint/efi/boot/bootx64.efi
	fi

	UUID=`blkid $device|awk -F "UUID" '{print $2;}'|awk -F "\"" '{print $2;}'`
	CMD="quiet androidboot.hardware=android_x86_64 BOOT_MODE=hdimgboot RAMDISK_HD_UUID=$UUID RAMDISK_IMG=OpenThos/ramdisk.img SYSTEM_HD_UUID=$UUID SYSTEM_IMG=OpenThos/system.sfs"
	bootdisk=`echo "$device"|tr -d "0-9"`
	part=`echo "$device"|tr -cd "0-9"`

	#finish install openthos EFI partition
	dialog --infobox "\n Syncing to disk..." 5 27
	sleep 1
	sync
	return 0
}
boto_data_install_to()
{
	local device=$1
	while [ 1 ]; do
		format_fs $1 data
		if [ `blkid $1|awk -F "TYPE" '{print $2;}'|awk -F "\"" '{print $2;}'` = "ntfs" ]; then
			mount.ntfs-3g $device $DataMountPoint && break
		else
			try_mount rw $device $DataMountPoint && break
		fi
		dialog --clear --title " Error "  --yesno \
			"\n Cannot mount /dev/$1\n Do you want to format it?" 8 37
		[ $? -ne 0 ] && return 255
	done
	mkdir $DataMountPoint/openthos
	create_boto_data_img
	
	#for data.img

	mount -o loop $DataMountPoint/openthos/data.img $DataImgMountPoint
	mkdir $DataImgMountPoint/vendor/app -p
	cd $DataImgMountPoint/vendor/app/
	zcat /mnt/$SRC/data.img|cpio -id
	cd /

	UUID=`blkid $device|awk -F "UUID" '{print $2;}'|awk -F "\"" '{print $2;}'`
	CMD="$CMD DATA_HD_UUID=$UUID DATA_IMG=openthos/data.img"
	echo "\"OpenThos\"" \"$CMD\" > $bootconf
	echo "\"OpenThos DEBUG\"" \"$CMD DEBUG=1\" >> $bootconf
	efibootmgr -c -d $bootdisk -p $part -L OpenThos -l /efi/boto/bootx64.efi

	dialog --infobox "\n Syncing data to disk..." 5 30
	sleep 1
	sync
	return 0
}
boto_hdimg_system()
{
	while [ 1 ];do
		select_system_dev|| rebooting
		retval=1
		case "$choice" in
			[hmnsv][dmv]*)
				boto_install_to /dev/$choice
				retval=$?
				break
				;;
			Create*)
				partition_drive
				retval=$?
				;;
			Detect*)
				dialog --title " Detecting... " --nocancel --pause "" 8 41 1
				;;
		esac
	done
	return $retval
}

boto_hdimg_data()
{
	select_data_dev || rebooting
	retval=1
	case "$choice" in
		[hmnsv][dmv]*)
			boto_data_install_to /dev/$choice
			retval=$?
			;;
	esac
	return $retval
}

manual_install()
{
	manual_install_guide
	until boto_hdimg_system; do
		if [ $retval -eq 255 ]; then
			dialog --title ' Error! ' --yes-label Retry --no-label Reboot \
				--yesno '\nInstallation failed!' 8 51
			[ $? -eq 1 ] && rebooting
		fi
	done
	until boto_hdimg_data; do
		if [ $retval -eq 255 ]; then
			dialog --title ' Error! ' --yes-label Retry --no-label Reboot \
				--yesno '\nInstallation failed!' 8 51
			[ $? -eq 1 ] && rebooting
		fi
	done
}
pre_mount()
{
	sys_part=$1"1"
	data_part=$1"2"
	mkfs.vfat -I -n EFI $sys_part
	try_mount rw $sys_part $EfiMountPoint
	mkntfs -F -f $data_part
	mount.ntfs-3g -o rw $data_part $DataMountPoint
}
install_system()
{
	mkdir $EfiMountPoint/$asrc
	cd $EfiMountPoint/$asrc
	for s in `cd /mnt/$SRC/;du -sk $files | awk '{print $1}'`; do
		size=$(($size+$s))
	done
	( ( cd /mnt/$SRC/; find $files | $CPIO -H newc -o ) | pv -ns ${size}k | ( $CPIO -iu > /dev/null; echo $? > /tmp/result )) 2>&1 \
		| progress_bar "Installing OPENTHOS" "Expect to write $size KB..."
	tar -xvf /mnt/$SRC/efi.tar.bz2 -C $EfiMountPoint > /dev/null
	mv $EfiMountPoint/efi/boot $EfiMountPoint/efi/boto
	if [ ! -e $EfiMountPoint/efi/boot/bootx64.efi ];then
		mkdir $EfiMountPoint/efi/boot -p
		mv $EfiMountPoint/efi/boto/fallback_x64.efi $EfiMountPoint/efi/boot/bootx64.efi
	fi
	UUID=`blkid $1"1"|awk -F "UUID" '{print $2;}'|awk -F "\"" '{print $2;}'`
	CMD="quiet androidboot.hardware=android_x86_64 BOOT_MODE=hdimgboot RAMDISK_HD_UUID=$UUID RAMDISK_IMG=OpenThos/ramdisk.img SYSTEM_HD_UUID=$UUID SYSTEM_IMG=OpenThos/system.sfs"
	bootdisk=$1

	sync;sync;sync
	mkdir $DataMountPoint/openthos
	freeSize=`df "$DataMountPoint"|awk 'NR==2{print $4}'`
	dd if=/dev/zero of=$DataMountPoint/openthos/data.img bs=1 count=0 seek="$freeSize"k
	avaiableLoop=`losetup -f`
	losetup $avaiableLoop $DataMountPoint/openthos/data.img
	mke2fs -F -t ext4 -L data $avaiableLoop > /dev/tty6
	mount -t ext4 $avaiableLoop $DataImgMountPoint
	mkdir $DataImgMountPoint/vendor/app -p
	cd $DataImgMountPoint/vendor/app/
	zcat /mnt/$SRC/data.img|cpio -id

	UUID=`blkid "$1"2|awk -F "UUID" '{print $2;}'|awk -F "\"" '{print $2;}'`
	CMD="$CMD DATA_HD_UUID=$UUID DATA_IMG=openthos/data.img"
	echo "\"OpenThos\"" \"$CMD\" > $bootconf
	echo "\"OpenThos DEBUG\"" \"$CMD DEBUG=1\" >> $bootconf
	efibootmgr -c -d $bootdisk -p 1 -L OpenThos -l /efi/boto/bootx64.efi
	sync
}
rebuild_all_partition()
{
	local disk=$1
	dialog --infobox "\n Destroy all Partition..." 5 30
	sgdisk -g -o -Z $disk
	dialog --infobox "\n Create new GPT Partitions..." 5 45
	# We just assume that  sector size is 512B
	sgdisk -g -n 1:2048:4196351 -t 1:ef00 $disk
	sgdisk -g -n 2:4196352: -t 2:8300 $disk
}
hgimg_install_system(){
	local disk=$1
	pre_mount $disk
	install_system $disk	
}
auto_install()
{
	dialog --title "Auto Install OPENTHOS" --defaultno --yesno "will ERASE whole hard drive,Continue?" 5 45
	if [ $? -eq 0 ];then
		select_whole_dev || rebooting
		rebuild_all_partition /dev/$choice
		hgimg_install_system /dev/$choice
	else
		rebooting
	fi
}
manual_install_guide(){
dialog --title "Manual Install Guide" --yes-label "Understand" --no-label "Cancel" --yesno "\
------------------------------------------------------------------------------------\n\
                    |Choose sda1 to install System Partition|\n\
                    -----------------------------------------\n\
                                       |\n 
                         -------------------------------\n\
                         |    Format sda1 with FAT32   |\n\
                         -------------------------------\n\
                                       |\n 
                         -------------------------------\n\
                         |         Install System      |\n\
                         -------------------------------\n\
                                       |\n 
                     ---------------------------------------\n\
                     |Choose sda2 to install Data Partition|\n\
                     ---------------------------------------\n\
                                       |\n 
                         -------------------------------\n\
                         |    Format sda2 with NTFS    |\n\
                         -------------------------------\n\
                                       |\n 
                         -------------------------------\n\
                         |    Install private data     |\n\
                         -------------------------------\n\
" 30 90
	if [ $? -eq 1 ];then
		rebooting
	fi
}
user_guide()
{
	dialog --title "Install OpenThos Guide" --yes-label Auto\ Install --no-label Manual\ Install --yesno "\
------------------------------------------------------------------\n\
|                          Install Method                        |\n\
------------------------------------------------------------------\n\
Auto Install:\n\
    will ERASE a whole hard disk to install OPENTHOS,you need to backup your private data\n\
    ========================================================\n\
    |\/\/\/\/\/\/\/\/\/\ hard disk is erased \/\/\/\/\/\/\/|\n\
    ========================================================\n\
\n\
\n\
Manual Install:\n\
  will need 2 partition,1st:System file,2st:private app and data\n\
      ====================================================\n\
      |  sda1:8G  |             sda2:20G             |...|\n\
      ====================================================\n\
            |                         |                     \n\
        System File              App and data               \n\
" 25 70
	return $?
}
prepare_install(){
	mkdir $EfiMountPoint $DataMountPoint $DataImgMountPoint
}
hdimg_install()
{
	prepare_install
	user_guide
	if [ $? -eq 1 ];then
		manual_install
	else 
		auto_install
	fi
	rebooting
}
